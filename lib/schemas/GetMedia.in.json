{
    "type": "object",
    "properties": {
        "Action": {
            "required": true,
            "type": "string"
        },
        "Version": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "properties": {
                "StartSelector": {
                    "description": "Identifies the starting chunk to get from the specified stream. ",
                    "properties": {
                        "AfterFragmentNumber": {
                            "description": "Specifies the fragment number from where you want the <code>GetMedia</code> API to start returning the fragments. ",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "^[0-9]+$",
                            "type": "string"
                        },
                        "ContinuationToken": {
                            "description": "Continuation token that Kinesis Video Streams returned in the previous <code>GetMedia</code> response. The <code>GetMedia</code> API then starts with the chunk identified by the continuation token.",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z0-9_\\.\\-]+$",
                            "type": "string"
                        },
                        "StartSelectorType": {
                            "description": "<p>Identifies the fragment on the Kinesis video stream where you want to start getting the data from.</p> <ul> <li> <p>NOW - Start with the latest chunk on the stream.</p> </li> <li> <p>EARLIEST - Start with earliest available chunk on the stream.</p> </li> <li> <p>FRAGMENT_NUMBER - Start with the chunk containing the specific fragment. You must also specify the <code>StartFragmentNumber</code>.</p> </li> <li> <p>PRODUCER_TIMESTAMP or SERVER_TIMESTAMP - Start with the chunk containing a fragment with the specified producer or server timestamp. You specify the timestamp by adding <code>StartTimestamp</code>.</p> </li> <li> <p> CONTINUATION_TOKEN - Read using the specified continuation token. </p> </li> </ul> <note> <p>If you choose the NOW, EARLIEST, or CONTINUATION_TOKEN as the <code>startSelectorType</code>, you don't provide any additional information in the <code>startSelector</code>.</p> </note>",
                            "enum": [
                                "FRAGMENT_NUMBER",
                                "SERVER_TIMESTAMP",
                                "PRODUCER_TIMESTAMP",
                                "NOW",
                                "EARLIEST",
                                "CONTINUATION_TOKEN"
                            ],
                            "type": "string"
                        },
                        "StartTimestamp": {
                            "description": "A timestamp value. This value is required if you choose the PRODUCER_TIMESTAMP or the SERVER_TIMESTAMP as the <code>startSelectorType</code>. The <code>GetMedia</code> API then starts with the chunk containing the fragment that has the specified timestamp.",
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    "required": [
                        "StartSelectorType"
                    ],
                    "type": "object"
                },
                "StreamARN": {
                    "description": "The ARN of the stream from where you want to get the media content. If you don't specify the <code>streamARN</code>, you must specify the <code>streamName</code>.",
                    "maxLength": 1024,
                    "minLength": 1,
                    "pattern": "arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+",
                    "type": "string"
                },
                "StreamName": {
                    "description": "The Kinesis video stream name from where you want to get the media content. If you don't specify the <code>streamName</code>, you must specify the <code>streamARN</code>.",
                    "maxLength": 256,
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_.-]+",
                    "type": "string"
                }
            },
            "required": [
                "StartSelector"
            ],
            "type": "object"
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}